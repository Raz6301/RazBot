<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title>לוח בקרה - RazBot</title>
  <link rel="stylesheet" href="/style.css">
  <style>
    section.dashboard-card {
      display: none;
    }
    section.dashboard-card.show {
      display: block;
    }
    .button.small {
      font-size: 0.8rem;
      padding: 4px 8px;
      margin: 0 4px;
      border-radius: 6px;
      cursor: pointer;
    }
    .reroll {
      background-color: #ffcc00;
      color: black;
    }
    .end {
      background-color: #ff4444;
      color: white;
    }
  </style>
</head>
<body>
  <!-- Top bar with language and theme toggles -->
  <header class="topbar">
    <!-- Hamburger menu toggle for mobile -->
    <button id="menuToggle">☰</button>
    <button id="langToggle"><%= lang === 'en' ? 'עברית' : 'English' %></button>
    <button id="themeToggle"><%= lang === 'en' ? 'Dark/Light' : 'בהיר/כהה' %></button>
  </header>

  <div class="container">
    <aside class="sidebar">
      <h2>🧱 תפריט</h2>
      <ul>
        <li><a href="#stats"> <%= t.menu.stats %> </a></li>
        <li><a href="#giveaways"> <%= t.menu.giveaways %> </a></li>
        <li><a href="#messages"> <%= t.menu.messages %> </a></li>
        <li><a href="#filters"> <%= t.menu.filters %> </a></li>
        <li><a href="#ticket"> <%= t.menu.ticket %> </a></li>
        <li><a href="#invites"> <%= t.menu.invites %> </a></li>
      </ul>
    </aside>

    <main class="main">
      <section id="stats" class="dashboard-card">
        <h2><%= t.sections.statsTitle %></h2>
        <div class="stats-box">
          <div class="stat"><strong><%= stats.users %></strong> משתמשים</div>
          <div class="stat"><strong><%= stats.channels %></strong> חדרים</div>
          <div class="stat"><strong><%= stats.roles %></strong> רולים</div>
        </div>

        <!-- תצוגת גרף סטטיסטיקות באמצעות Chart.js -->
        <canvas id="statsChart" width="400" height="200" style="margin-top: 20px;"></canvas>
      </section>

      <section id="giveaways" class="dashboard-card">
        <h2><%= t.sections.createGiveawayTitle %></h2>
        <form method="POST" action="/start-giveaway?lang=<%= lang %>">
          <input type="text" name="giveawayChannel" placeholder="<%= lang === 'en' ? 'Channel name' : 'שם החדר' %>">
          <input type="text" name="giveawayDuration" placeholder="<%= lang === 'en' ? 'Duration (10m, 1h)' : 'משך ההגרלה (10m, 1h)' %>">
          <input type="number" name="giveawayWinners" placeholder="<%= lang === 'en' ? 'Number of winners' : 'מספר זוכים' %>">
          <input type="text" name="giveawayPrize" placeholder="<%= lang === 'en' ? 'Prize' : 'הפרס' %>">
          <button type="submit"><%= t.actions.startGiveaway %></button>
        </form>

        <h3><%= t.sections.activeGiveawaysTitle %></h3>
        <ul id="activeGiveawaysList"><li>טוען...</li></ul>

        <hr>

        <h3><%= t.sections.endedGiveawaysTitle %></h3>
        <ul id="endedGiveawaysList"><li>טוען...</li></ul>
      </section>

      <section id="messages" class="dashboard-card">
        <h2><%= t.sections.messagesTitle %></h2>
        <p>📥 ברוך הבא: <%= messages.welcome %></p>
        <p>🔗 הזמנה: <%= messages.invite %></p>
        <p>⚠️ שגיאה: <%= messages.error %></p>
      </section>

      <section id="filters" class="dashboard-card">
        <h2><%= t.sections.filtersTitle %></h2>
        <form method="POST" action="/toggle-blockLinks?lang=<%= lang %>">
          <button type="submit"><%= lang === 'en' ? 'Links: ' : 'לינקים: ' %><%= config.blockLinks ? (lang === 'en' ? 'Enabled' : 'מופעל') : (lang === 'en' ? 'Disabled' : 'כבוי') %></button>
        </form>
        <form method="POST" action="/toggle-blockPings?lang=<%= lang %>">
          <button type="submit"><%= lang === 'en' ? 'Pings: ' : 'פינגים: ' %><%= config.blockPings ? (lang === 'en' ? 'Enabled' : 'מופעל') : (lang === 'en' ? 'Disabled' : 'כבוי') %></button>
        </form>
        <form method="POST" action="/add-badword?lang=<%= lang %>">
          <input type="text" name="word" placeholder="<%= lang === 'en' ? 'Add a forbidden word' : 'הוסף מילה אסורה' %>">
          <button type="submit"><%= t.actions.addForbiddenWord %></button>
        </form>
      </section>

      <section id="ticket" class="dashboard-card">
        <h2><%= t.sections.ticketTitle %></h2>
   <form method="POST" action="/send-ticket-button?lang=<%= lang %>">
  <input type="text" name="ticketChannel" placeholder="<%= lang === 'en' ? 'Channel name' : 'שם החדר' %>">
  <input type="text" name="ticketMessage" placeholder="<%= lang === 'en' ? 'Message text' : 'תוכן ההודעה' %>">
  <input type="text" name="closedCategory" placeholder="<%= lang === 'en' ? 'Closed tickets category name' : 'שם הקטגוריה לטיקטים סגורים' %>">
  <button type="submit"><%= t.actions.sendTicket %></button>
</form>
      </section>

      <section id="invites" class="dashboard-card">
        <h2><%= t.sections.invitesTitle %></h2>
        <ul id="invitesList"><li><%= lang === 'en' ? 'Loading...' : 'טוען...' %></li></ul>
      </section>
    </main>
  </div>

  <script>
    // טען את ספריית Chart.js
    // Note: Chart.js נטען באמצעות CDN בהמשך (ראו בהמשך).
    async function fetchGiveaways() {
      try {
        const res = await fetch("/api/giveaways");
        const giveaways = await res.json();
        const active = giveaways.filter(g => !g.ended);
        const ended = giveaways.filter(g => g.ended);
        const activeList = document.getElementById("activeGiveawaysList");
        const endedList = document.getElementById("endedGiveawaysList");
        activeList.innerHTML = active.length === 0 ? "<li>אין כרגע הגרלות פעילות.</li>" : "";
        endedList.innerHTML = ended.length === 0 ? "<li>אין עדיין הגרלות שהסתיימו.</li>" : "";
        active.forEach(g => {
          activeList.innerHTML += `<li><strong>🎁 ${g.prize}</strong> | זכים: ${g.winnerCount} | מסתיימת: ${new Date(g.endAt).toLocaleString("he-IL")}
    <form method="POST" action="/reroll-giveaway/${g.messageId}" style="display:inline;">
<button class="button small reroll">🎲 רירול</button>
</form>

<form method="POST" action="/end-giveaway/${g.messageId}" style="display:inline;">
<button class="button small end">⛔ סיום</button>
</form>

          </li>`;
        });
      ended.forEach(g => {
  endedList.innerHTML += `
    <li>
      <strong>🎁 ${g.prize}</strong> | זכים: ${g.winnerCount} | הסתיימה: ${new Date(g.endAt).toLocaleString("he-IL")}
      <form method="POST" action="/reroll-giveaway/${g.messageId}" style="display:inline;">
        <button class="button small reroll">🎲 רירול</button>
      </form>
      <form method="POST" action="/delete-giveaway" style="display:inline;">
        <input type="hidden" name="giveawayId" value="${g.messageId}">
        <button class="button small delete">🗑️ מחק</button>
      </form>
    </li>`;
});

      } catch (err) {
        console.error("שגיאה בטעינת הגרלות:", err);
      }
    }

    async function fetchInvites() {
      try {
        const res = await fetch("/api/invites");
        const invites = await res.json();
        const list = document.getElementById("invitesList");
        list.innerHTML = invites.length === 0 ? "<li>אין נתוני הזמנות זמינים.</li>" : "";
        invites.forEach(i => {
          list.innerHTML += `<li><strong>${i.username}</strong> הזמין ${i.count} משתמשים</li>`;
        });
      } catch (err) {
        console.error("שגיאה בטעינת הזמנות:", err);
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      const links = document.querySelectorAll(".sidebar a");
      const saved = localStorage.getItem("lastSection") || "stats";
      showSection(saved);
      links.forEach(link => link.addEventListener("click", e => {
        e.preventDefault();
        showSection(link.getAttribute("href").substring(1));
      }));
      fetchGiveaways();
      fetchInvites();
      fetchStatsChart();
    });

    function showSection(id) {
      document.querySelectorAll(".dashboard-card").forEach(sec => sec.classList.remove("show"));
      const target = document.getElementById(id);
      if (target) target.classList.add("show");
      history.replaceState(null, null, `#${id}`);
      localStorage.setItem("lastSection", id);
    }

    async function fetchStatsChart() {
      try {
        const res = await fetch("/api/stats");
        const stats = await res.json();
        const ctx = document.getElementById("statsChart").getContext("2d");
        // הרס את הגרף הקודם אם הוא קיים
        if (window.statsChart) {
          window.statsChart.destroy();
        }
        window.statsChart = new Chart(ctx, {
          type: 'bar',
          data: {
            labels: ['משתמשים', 'חדרים', 'רולים'],
            datasets: [{
              label: 'כמות',
              data: [stats.users, stats.channels, stats.roles],
              backgroundColor: ['#44ff44', '#ffaa00', '#00ccff'],
              borderColor: ['#44ff44', '#ffaa00', '#00ccff'],
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true,
                ticks: {
                  color: '#fff'
                },
                grid: {
                  color: 'rgba(255,255,255,0.1)'
                }
              },
              x: {
                ticks: {
                  color: '#fff'
                },
                grid: {
                  color: 'rgba(255,255,255,0.1)'
                }
              }
            },
            plugins: {
              legend: {
                labels: {
                  color: '#fff'
                }
              }
            }
          }
        });
      } catch (err) {
        console.error('שגיאה בטעינת סטטיסטיקות:', err);
      }
    }
  </script>

  <!-- טעינת ספריית Chart.js מה‑CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <!-- טעינת לקוח Socket.io כדי להתחבר לשרת בזמן אמת -->
  <script src="/socket.io/socket.io.js"></script>

  <!-- Toggle theme and language script -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const themeToggle = document.getElementById('themeToggle');
      const langToggle = document.getElementById('langToggle');
      const menuToggleBtn = document.getElementById('menuToggle');
      const sidebarEl = document.querySelector('.sidebar');
      const root = document.documentElement;
      // Restore saved theme preference or default to dark
      const savedTheme = localStorage.getItem('theme') || 'dark';
      root.setAttribute('data-theme', savedTheme);
      // Switch between dark and light themes
      if (themeToggle) {
        themeToggle.addEventListener('click', () => {
          const current = root.getAttribute('data-theme') || 'dark';
          const newTheme = current === 'dark' ? 'light' : 'dark';
          root.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        });
      }
      // Switch between Hebrew and English by updating the query parameter
      if (langToggle) {
        langToggle.addEventListener('click', () => {
          const currentLang = '<%= lang %>';
          const newLang = currentLang === 'en' ? 'he' : 'en';
          const url = new URL(window.location.href);
          url.searchParams.set('lang', newLang);
          window.location.href = url.toString();
        });
      }

      // Toggle sidebar visibility on mobile when hamburger is clicked
      if (menuToggleBtn && sidebarEl) {
        menuToggleBtn.addEventListener('click', () => {
          sidebarEl.classList.toggle('open');
        });
      }
    });
  </script>

  <!-- Socket.io real-time updates -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const socket = io();
      // קבל עדכון סטטיסטיקות ושדרג את התצוגה והגרף
      socket.on('stats', stats => {
        // עדכן את הערכים בכרטיסייה
        const statsElements = document.querySelectorAll('#stats .stat strong');
        if (statsElements.length >= 3) {
          statsElements[0].textContent = stats.users;
          statsElements[1].textContent = stats.channels;
          statsElements[2].textContent = stats.roles;
        }
        // עדכן את הגרף אם קיים
        if (window.statsChart) {
          window.statsChart.data.datasets[0].data = [stats.users, stats.channels, stats.roles];
          window.statsChart.update();
        }
      });
      // קבל עדכון הזמנות ושדרג את רשימת ההזמנות
      socket.on('invites', invites => {
        const list = document.getElementById('invitesList');
        if (!list) return;
        list.innerHTML = invites.length === 0 ? "<li><%= lang === 'en' ? 'No invite data available.' : 'אין נתוני הזמנות זמינים.' %></li>" : "";
        invites.forEach(i => {
          list.innerHTML += `<li><strong>${i.username}</strong> הזמין ${i.count} משתמשים</li>`;
        });
      });

      // קבל עדכוני הגרלות ושדרג את רשימת ההגרלות הפעילות והסתיימו
      socket.on('giveaways', data => {
        const active = data.active || [];
        const ended = data.ended || [];
        const activeList = document.getElementById('activeGiveawaysList');
        const endedList = document.getElementById('endedGiveawaysList');
        if (!activeList || !endedList) return;
        // נקה תוכן קודם
        activeList.innerHTML = active.length === 0 ? `<li><%= lang === 'en' ? 'No active giveaways.' : 'אין כרגע הגרלות פעילות.' %></li>` : '';
        endedList.innerHTML = ended.length === 0 ? `<li><%= lang === 'en' ? 'No giveaways have ended yet.' : 'אין עדיין הגרלות שהסתיימו.' %></li>` : '';
        // עבור כל הגרלה פעילה, הוסף לרשימה כפריט HTML
        active.forEach(g => {
          activeList.innerHTML += `
            <li>
              <strong>🎁 ${g.prize}</strong> | זכים: ${g.winnerCount} | מסתיימת: ${new Date(g.endAt).toLocaleString('he-IL')}
              <form method="POST" action="/reroll-giveaway/${g.messageId}" style="display:inline;">
                <button class="button small reroll">🎲 רירול</button>
              </form>
              <form method="POST" action="/end-giveaway/${g.messageId}" style="display:inline;">
                <button class="button small end">⛔ סיום</button>
              </form>
            </li>`;
        });
        // עבור הגרלות שהסתיימו, הוסף לרשימה כולל כפתורי רירול ומחיקה
        ended.forEach(g => {
          endedList.innerHTML += `
            <li>
              <strong>🎁 ${g.prize}</strong> | זכים: ${g.winnerCount} | הסתיימה: ${new Date(g.endAt).toLocaleString('he-IL')}
              <form method="POST" action="/reroll-giveaway/${g.messageId}" style="display:inline;">
                <button class="button small reroll">🎲 רירול</button>
              </form>
              <form method="POST" action="/delete-giveaway" style="display:inline;">
                <input type="hidden" name="giveawayId" value="${g.messageId}">
                <button class="button small delete">🗑️ מחק</button>
              </form>
            </li>`;
        });
      });
    });
  </script>
</body>
</html>
