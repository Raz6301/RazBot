<!DOCTYPE html>
<html lang="<%= lang %>" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title><%= t.loginTitle %></title>
  <link rel="stylesheet" href="/style.css">
  <style>
    /* סגנון מינימלי לעמוד התחברות */
    .login-container {
      max-width: 400px;
      margin: 100px auto;
      background-color: var(--card-bg);
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.3);
    }
    .login-container h1 {
      text-align: center;
      margin-bottom: 20px;
      color: var(--primary-color);
    }
    .login-container form {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    .error {
      color: #ff5555;
      text-align: center;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <!-- Top bar with language and theme toggles on login page -->
  <header class="topbar">
    <button id="langToggle"><%= lang === 'en' ? 'עברית' : 'English' %></button>
    <button id="themeToggle"><%= lang === 'en' ? 'Dark/Light' : 'בהיר/כהה' %></button>
  </header>

  <div class="login-container">
    <h1><%= t.loginTitle %></h1>
    <% if (error) { %>
      <div class="error"><%= t.errorMessage %></div>
    <% } %>
    <form method="POST" action="/login?lang=<%= lang %>">
      <input type="password" name="password" placeholder="<%= t.passwordPlaceholder %>">
      <button type="submit"><%= t.loginButton %></button>
    </form>
  </div>

  <!-- Theme and language toggle script for login page -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const themeToggle = document.getElementById('themeToggle');
      const langToggle = document.getElementById('langToggle');
      const root = document.documentElement;
      const savedTheme = localStorage.getItem('theme') || 'dark';
      root.setAttribute('data-theme', savedTheme);
      if (themeToggle) {
        themeToggle.addEventListener('click', () => {
          const current = root.getAttribute('data-theme') || 'dark';
          const newTheme = current === 'dark' ? 'light' : 'dark';
          root.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        });
      }
      if (langToggle) {
        langToggle.addEventListener('click', () => {
          const currentLang = '<%= lang %>';
          const newLang = currentLang === 'en' ? 'he' : 'en';
          const url = new URL(window.location.href);
          url.searchParams.set('lang', newLang);
          window.location.href = url.toString();
        });
      }
    });
  </script>
</body>
</html>